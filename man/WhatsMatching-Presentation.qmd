---
title: "What's Matching?"
Subtitle: "A"
authors: c("Jason Meyer","Dr Mark Hanly")
format:
  revealjs:
    theme: beige
    slide-number: true
title-slide-attributes: 
  data-background-image: figures/logo.png
  data-background-position: 17% 44%
  data-background-size: 15%
logo: figures/logo.png
footer: "Dissertation Project: What's Matching. Author: Jason Meyer. Supervisor: Dr Mark Hanly"
header: "What's Matching"
center: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, fig.align = "center")
```

# What's Matching? {style="text-align: center; margin-top: 6px;" background-size="15%" background-position="17% 44%" background-image="figures/logo.png" auto-animate="true"}

```{css, echo=FALSE}
.ch h2 {
  text-align: center;
}

.center {
  display: table;
  margin-right: auto;
  margin-left: auto;
}

.shadow {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

```

::: notes
-   Hi everyone, My name is Jason Meyer\
-   I've spent the last year, part-time developing this project with my supervisor Dr Mark Hanly\
-   The title of my project is What's Matching and today I'd like to spend some time telling you about it.
-   In this project we were interested in the methodological approach of matching.
-   This is a very popular approach but it is a bit black box - we don't really see what's happening
-   What we've done for this project is to crack open the matching algorithm so that people can see the guts of it and how it works.
-   To do this I have written functions in R to replicate the matching process in a way such that we can see what's going on.
-   The project has been implemented in a Shiny app and today I will briefly show you the app and outline some of the lessons that can be learned from this tool.
:::

## Background {.build .ch}

-   RCTs are the gold standard but often not feasible

-   EHRs and other data sources are now plentiful

![](https://www.rarst.net/images/Comicstripsasultimateformofdailytechhumo_13EF4/comic_dilbert.png){fig-align="center" .shadow}

::: notes
-   So, just some quick background...
-   The gold standard for estimating treatment effects is RCTs
-   Unfortunately not all treatments are able to be investigated this way due to feasibility, ethical issues or just being plain impractical
-   However, we now have access to an extensive array of electronic data, particularly in the health care arena\
-   This provides us with lots of opportunity for using data to investigate things we may not be able to under normal circumstances\
-   It is not without challenges though. Observational data is not generally built for this purpose and so the analysis and conclusions need to be considered carefully\
-   One way to deal with these challenges is by using Matching
:::

## Matching {.ch}

:::{.columns}

:::{.column width="65%"}

-   Commonly used pre-processing step
-   Operations aren't always clear
-   There's also a lot of...
:::
:::{.column width="35%"}

![](figures/KNtitle.png){.shadow}

:::

:::

::: notes
-   Matching is a pre-processing step that is used, in particular, to assist with controlling confounding
-   As I noted earlier, matching is a bit black box
-   King and Neilsen also noted in their 2019 paper that poor application of the method was likely to be wide spread
-   From working on this project I would say that, anecdotally, this is because there's a lot of...
:::

## Decisions, decisions, decisions {.ch}

-   Distance\
-   Covariate selection\
-   Replacement\
-   Ordering\
-   Caliper adjustment


::: notes
-   decision, decisions, decisions!
-   This list - distance, covariate selection, replacement, ordering and caliper adjustment - make up the basic suite of options that an analyst could consider
-   The theories that underpin the particular settings for each matching method are well documented
-   generally though, many options are set automatically by coded functions that are used to implement matching\
-   this contributes to some of its black-box operation
-   In the interests of time, I won't go into detail here but it's safe to say there are a few decisions to make
:::

## We wanted to provide an interactive environment for people to learn about matching {.ch}

::: notes

-   We decided this was an opportunity to develop an interactive environment for people to learn about matching and to understand the possible implications of their decisions
-   This project is designed around highlighting the practical application of the settings and what the implications might be

:::


## Development Process {.ch}

![](figures/dev_pathway.png){fig-align="center" height="550px"}

::: notes
-   developing this interactive environment has been more involved than I expected
-   initially the project started out investigating a paradox that occurs when using the propensity score for matching which was going to be demonstrated in a shiny app
-   It has turned into a R Packge, Shiny App and Website that looks at and unpacks matching methodology
-   I think one of the brilliant things about it, is that because it's been developed across all these platforms, it can cater to a wide audience. 
-   Let's take a look at the app
:::


## The App {.ch}

![](figures/App_Main.jpeg){fig-align="center" height="550px" .shadow}

::: notes
-   This is a screenshot of the shiny app that's been developed.

-   Before I show you the app, I'm just going to go through each of the plots individually to give some context for when I demo the app
:::

## Plot 1 and 2 - Matches of the Actual Data {.ch}

::: {.center .shadow}
```{r, warning=FALSE}
library(WhatsMatching)
library(dplyr)

d <- create.sim.data(te=2)

te <- mean(d$error[d$t==1], na.rm = T)-mean(d$error[d$t==0], na.rm = T) + 2

m1 <- matched.data(t~X1+X2, d, "Mahalanobis")
m2 <- matched.data(t~X1+X2, d, "Propensity Score") 


WhatsMatching::matching.plot(m1, "X1", "X2") %>% plotly::layout(showlegend=TRUE)

```
:::

::: notes
-   This is a preview of plot 1. Plot 1 and 2 are essentially the same except for a key difference. 
-   They are displaying the data from different pre-specified methods of matching. This is so the user can visualise the matching between differing methods and settings in real time. 
-   They both contain a representation of the actual data.
-   There is a covariate represented on each axes, in this case X1 on x and X2 on y\
-   the color represents their treatment group - red for treated, blue for control
-   when a bolder observation appears, this represents a matched pair which are joined together with a black line
-   the circles around the single pair indicate the most recently matched pair
-   To give you an idea of what to expect I'll just jump to half way and you can see that there are more matched pairs
:::

## Plot 3 - Standardised Mean Difference {.ch}

::: {.center .shadow}
```{r, warning=FALSE}
WhatsMatching:::std.means.plot(m1,m2,"X1","X2","t") %>%
  plotly::animation_opts(transition = 0, redraw=T, frame=400) %>%
  plotly::animation_slider(currentvalue = list(prefix = "Number of pairs matched: ",
                                         xanchor = "left",
                                         font = list(color="#2d2d2d"))) %>%
  plotly::layout(showlegend=TRUE)
```
:::

::: notes
-   The next plot is Plot 3, this plot shows what happens with the standardised mean difference or SMD
-   The SMD is what tells us that the covariate values are balanced between the treated and control groups
-   Improving covariate balance is important when dealing with confounders if your aim is to reduce model dependence
-   Ideally, the SMD will be around 0 which is highlighted with the green strip
-   The dotted black lines represent the SMD of the unadjusted data for the 2 covariates in plot 1 and 2
-   I'll just jump forward again, and you can see there is a line for each matching approach represented by a different colour and line type
-   the individual covariates are not visually represented but you only need to hover the individual line to identify the covariate of interest
:::

## Plot 4 - The Estimate of the Treatment Effect {.ch}

::: {.center .shadow}
```{r, warning=FALSE}
WhatsMatching:::estimates.plot(m1,m2,y~t,te) %>%
  plotly::animation_opts(transition = 0, redraw=T, frame=400) %>%
  plotly::animation_slider(currentvalue = list(prefix = "Number of pairs matched: ",
                                         xanchor = "left",
                                         font = list(color="#2d2d2d")))
```
:::

::: notes
-   that brings us to plot 4
-   plot 4 uses the same colours and linetypes to represent the matching approach but it is showing us the estimated treatment effect
-   there is only one line per approach
-   we have also included other methodological estimates from the raw data, propensity score weighting and propensity score stratification
-   for situations where we know the treatment effect from a simulation, we are able visualise it with the same green strip as in plot 3
:::

## Demonstration time! {.ch}

How do we use it?

-   Generate data from one of 4 simulations or 1 real dataset

-   Choose the matching settings

-   Watch the matching happen

::: notes
-   So now we've had a brief look at some of the plots from the app it's probably worth understanding how to use it
-   it's pretty simple actually, just select one of four the simulated or real data sets available in the app
-   choose the matching approach you would like and adjust the settings, 
-   Then press play and watch
-   This particular simulation is based on one by King and Neilsen which was looking at why the propensity score shouldn't be used for matching
-   Basically, the 3 groups represent a matched pair randomised experiment, a completely randomised experiment and control units from an imbalanced observational  data set
:::

## What questions can we answer? {.ch .smaller}

-   Basic Questions

    -   What happens when the order of the matches is changed?
    
    -   what happens if replacement is or isn't used?
    
    -   Is covariate balanace maintained?
    
    -   Is a particular matching distance consistently superior?

-   Advanced Questions

    -   How does propensity score matching compare to other propensity score methods?
    
    -   what is the impact of model selection on the estimate?

    -   Which parameters have the biggest impact on the performace of matching?
    
:::notes
here are some examples of quesitons we can answer with the app after some exploration

I'll go into some detail here about some things we've found from our explorations
:::

## Summary {.ch .smaller}

-   Shiny App

    -   Demonstrates how matching works

    -   Interactive learning environment

-   R Package

    -   Advanced functions for user exploration with the same outputs as the Shiny App
    
    -   Includes data generation that is not easily accessed in other matching packages

-   Website

    -   Provides and educational resources for users to access and gain further context

::: notes
-   In summary, what I'll be delivering is a project that has broad capacity to provide education and insights into how matching works  
-   we have an app that demonstrates how matching work in an interactive learning environment that can be used by anyone and gives people without a grounding in data science a better look into the black box that is matching
-   the functions in the R package give more advanced users the ability to play with these tools using any data they choose, although it is not designed to be used for analyses
-   and then the website provides the underpinning framework of information and educational resources that inform the package and the app
:::

## Thanks for listening {.ch .smaller}

::: {style="text-align: center;"}
Code: [https://github.com/jmeyer2482/WhatsMatching](github.com/jmeyer2482/WhatsMatching)

App: [https://jmeyer2482.shinyapps.io/WhatsMatching](jmeyer2482.shinyapps.io/WhatsMatching)

R Install: `devtools::install_github("jmeyer2482/WhatsMatching")`

Website: [https://jmeyer2482.github.io/WhatsMatching](jmeyer2482.github.io/WhatsMatching)\
\
\
*Special thanks to Mark Hanly for his guidance (and patience)*
:::

::: notes
-   thanks for listening everyone
-   here's a list of the places you can visit to see my project first hand and install instructions if you'd like to install the package
-   Also, a massive thank you to my supervisor Mark who's been integral to maintaining my focus
-   I'm happy to take questions now if anyone has any?
:::
